import java.util.*;
class Main{
    
    public static void shortestDist(ArrayList<ArrayList<Integer>> adj,int n,int s)
    {
        int[] dist=new int[n];
        dist[s]=0;
        boolean[] visited=new boolean[n+1];
        Queue<Integer> q=new LinkedList<Integer>();
        q.add(s);
        visited[s]=true;
        while(!q.isEmpty())
        {
            int u=q.poll();
            for(int v:adj.get(u))
            {
                if(visited[v]==false)
                {
                    dist[v]=dist[u]+1;
                    visited[v]=true;
                    q.add(v);
                }
            }
        }
        System.out.println("short paths are :");
        System.out.println(Arrays.toString(dist));

    }
    public static void addEdge(ArrayList<ArrayList<Integer>> adj,int u,int v)
    {
        adj.get(u).add(v);
        adj.get(v).add(u);
    }
    public static void main(String args[])
    {
        int n=4;
        ArrayList<ArrayList<Integer>> adj=new ArrayList<ArrayList<Integer>>(4);
        for(int i=0;i<n;i++)
        {
            adj.add(new ArrayList<Integer>());
        }
        addEdge(adj,0,1);
        addEdge(adj,0,2);
        addEdge(adj,1,2);
        addEdge(adj,1,3);
        addEdge(adj,2,3);
        System.out.println(adj);
        shortestDist(adj,4,0);
    }
}
