import java.util.*;
public class Main
{
    public static void addEdge(ArrayList<ArrayList<Integer>> adj,int u,int v)
    {
        adj.get(u).add(v);
        adj.get(v).add(u);
    }
    
    public static void parentFunc(ArrayList<ArrayList<Integer>> adj,int n)
    {
        int[] parent=new int[n];
        for(int i=0;i<n;i++)
            parent[i]=-1;
        Queue<Integer> q=new LinkedList<Integer>();
        boolean[] visited=new boolean[n+1];
        int s=0;
        q.add(s);
        visited[s]=true;
        while(!q.isEmpty())
        {
            int u=q.poll();
            for( int v:adj.get(u))
            {
                if(visited[v]==false)
                {
                    q.add(v);
                    parent[v]=u;
                    visited[v]=true;
                    
                }
            }
        }
        System.out.println(Arrays.toString(parent));
        
    }
	public static void main(String[] args) {
	    int n=6;
	    ArrayList<ArrayList<Integer>> adj=new ArrayList<ArrayList<Integer>>();
	    for(int i=0;i<n;i++)
	    {
	        adj.add(new ArrayList<Integer>());
	    }
	    addEdge(adj,0,1);
	    addEdge(adj,1,2);
	    addEdge(adj,1,3);
	    addEdge(adj,2,3);
	    addEdge(adj,2,4);
	    addEdge(adj,4,5);
	    System.out.println(adj);
	    parentFunc(adj,6);
		
	}
}
